name : Kotlin CI

on :
  push :
    branches :
      - main
  pull_request :
  merge_group :

# If CI is already running for a branch when that branch is updated, cancel the older jobs.
concurrency :
  group : ci-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress : true

jobs :

  build-all:
    name: Build all
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: main build
        uses: ./.github/actions/gradle-task
        with:
          task: compileKotlin compileDebugKotlin
          write-cache-key: main-build-artifacts

  dokka :
    name : Assemble & Dokka
    runs-on : ubuntu-latest
    needs: build-all
    steps :
      - uses : actions/checkout@v3

      - name : Run dokka to validate kdoc
        uses : ./.github/actions/gradle-task
        with :
          task : siteDokka
          write-cache-key : main-build-artifacts

  artifacts-check :
    name : ArtifactsCheck
    # the `artifactsCheck` task has to run on macOS in order to see the iOS KMP artifacts
    runs-on : macos-latest
    steps :
      - uses : actions/checkout@v3

      - name : check published artifacts
        uses : ./.github/actions/gradle-task-with-commit
        with :
          check-task : artifactsCheck
          fix-task : artifactsDump
          write-cache-key : build-logic

  dependency-guard :
    name : Dependency Guard
    runs-on : ubuntu-latest
    steps :
      - uses : actions/checkout@v3

      # If the PR was made by a maintainer or Renovate, automatically update baselines and push
      # so that no one has to check out the branch and update the baselines manually.
      - name : dependency-guard
        uses : ./.github/actions/gradle-task-with-commit
        with :
          check-task : dependencyGuard --refresh-dependencies
          fix-task : dependencyGuardBaseline --refresh-dependencies
          write-cache-key : build-logic

  ktlint :
    name : KtLint
    runs-on : ubuntu-latest
    steps :
      - uses : actions/checkout@v3

      # If the PR was made by a maintainer or Renovate, automatically format and push
      # so that no one has to check out the branch and do it manually.
      - name : KtLint
        uses : ./.github/actions/gradle-task-with-commit
        with :
          check-task : ktLintCheck
          fix-task : ktLintFormat
          write-cache-key : build-logic

  api-check :
    name : Api check
    runs-on : ubuntu-latest
    steps :
      - uses : actions/checkout@v3

      # If the PR was made by a maintainer or Renovate, automatically format and push
      # so that no one has to check out the branch and do it manually.
      - name : binary compatibility
        uses : ./.github/actions/gradle-task-with-commit
        with :
          check-task : apiCheck
          fix-task : apiDump
          write-cache-key : build-logic

  android-lint :
    name : Android Lint
    runs-on : ubuntu-latest
    needs: build-all
    timeout-minutes : 20
    steps :
      - uses : actions/checkout@v3
      - name : Check with Gradle
        uses : ./.github/actions/gradle-task
        with :
          task : lint
          write-cache-key : main-build-artifacts

  check :
    name : Check
    runs-on : ubuntu-latest
    needs: build-all
    timeout-minutes : 20
    steps :
      - uses : actions/checkout@v3
      - name : Check with Gradle
        uses : ./.github/actions/gradle-task
        with :
          task : |
            checkVersionIsSnapshot
            allTests
            test 
            --continue
          restore-cache-key : build-logic
          write-cache-key : main-build-artifacts

      # Report as GitHub Pull Request Check.
      - name : Publish Test Report
        uses : mikepenz/action-junit-report@v3
        if : always() # always run even if the previous step fails
        with :
          report_paths : '**/build/test-results/test/TEST-*.xml'

  tutorials :
    name : Build Tutorials
    runs-on : ubuntu-latest
    timeout-minutes : 15
    steps :
      # These setup steps should be common across all jobs in this workflow.
      - uses : actions/checkout@v3
      - name : build tutorials
        uses : ./.github/actions/gradle-task
        with :
          task : build
          build-root-directory : samples/tutorial
          restore-cache-key : main-build-artifacts

  jvm-conflate-runtime-test :
    name : Conflate Stale Renderings Runtime JVM Tests
    runs-on : ubuntu-latest
    timeout-minutes : 20
    steps :
      - uses : actions/checkout@v3
      - name : Check with Gradle
        uses : ./.github/actions/gradle-task
        with :
          task : jvmTest --continue -Pworkflow.runtime=conflate
          restore-cache-key : main-build-artifacts

      # Report as GitHub Pull Request Check.
      - name : Publish Test Report
        uses : mikepenz/action-junit-report@v3
        if : always() # always run even if the previous step fails
        with :
          report_paths : '**/build/test-results/test/TEST-*.xml'

  jvm-stateChange-runtime-test :
    name : Render On State Change Only Runtime JVM Tests
    runs-on : ubuntu-latest
    timeout-minutes : 20
    steps :
      - uses : actions/checkout@v3
      - name : Check with Gradle
        uses : ./.github/actions/gradle-task
        with :
          task : jvmTest --continue -Pworkflow.runtime=baseline-stateChange
          restore-cache-key : main-build-artifacts

      # Report as GitHub Pull Request Check.
      - name : Publish Test Report
        uses : mikepenz/action-junit-report@v3
        if : always() # always run even if the previous step fails
        with :
          report_paths : '**/build/test-results/test/TEST-*.xml'

  jvm-conflate-stateChange-runtime-test :
    name : Render On State Change Only and Conflate Stale Runtime JVM Tests
    runs-on : ubuntu-latest
    timeout-minutes : 20
    steps :
      - uses : actions/checkout@v3
      - name : Check with Gradle
        uses : ./.github/actions/gradle-task
        with :
          task : jvmTest --continue -Pworkflow.runtime=conflate-stateChange
          restore-cache-key : main-build-artifacts

      # Report as GitHub Pull Request Check.
      - name : Publish Test Report
        uses : mikepenz/action-junit-report@v3
        if : always() # always run even if the previous step fails
        with :
          report_paths : '**/build/test-results/test/TEST-*.xml'

  ios-tests :
    name : iOS Tests
    runs-on : macos-latest
    timeout-minutes : 30
    steps :
      - uses : actions/checkout@v3
      - name : Check with Gradle
        uses : ./.github/actions/gradle-task
        with :
          task : iosX64Test
          restore-cache-key : main-build-artifacts

      # Report as GitHub Pull Request Check.
      - name : Publish Test Report
        uses : mikepenz/action-junit-report@v3
        if : always() # always run even if the previous step fails
        with :
          report_paths : '**/build/test-results/test/TEST-*.xml'

  js-tests :
    name : JS Tests
    runs-on : ubuntu-latest
    timeout-minutes : 20
    steps :
      - uses : actions/checkout@v3

      ## JS Specific Tests (for KMP js actuals in core and runtime).
      - name : Check with Gradle
        uses : ./.github/actions/gradle-task
        with :
          task : jsTest
          restore-cache-key : main-build-artifacts

      # Report as GitHub Pull Request Check.
      - name : Publish Test Report
        uses : mikepenz/action-junit-report@v3
        if : always() # always run even if the previous step fails
        with :
          report_paths : '**/build/test-results/test/TEST-*.xml'

  performance-tests :
    name : Performance tests
    runs-on : macos-latest
    timeout-minutes : 30
    strategy :
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast : false
      matrix :
        api-level :
          - 29
      # Unclear that older versions actually honor command to disable animation.
      # Newer versions are reputed to be too slow: https://github.com/ReactiveCircus/android-emulator-runner/issues/222
    steps :
      - uses : actions/checkout@v3

      ## Build before running tests, using cache.
      - name : Build instrumented tests
        uses : ./.github/actions/gradle-task
        with :
          task : :benchmarks:performance-poetry:complex-poetry:assembleDebugAndroidTest
          restore-cache-key : main-build-artifacts

      ## Actual task
      - name : Render Pass Counting Test
        uses : reactivecircus/android-emulator-runner@v2
        with :
          # @ychescale9 suspects Galaxy Nexus is the fastest one
          profile : Galaxy Nexus
          api-level : ${{ matrix.api-level }}
          arch : x86_64
          script : ./gradlew :benchmarks:performance-poetry:complex-poetry:connectedCheck --continue

      - name : Upload results
        if : ${{ always() }}
        uses : actions/upload-artifact@v3
        with :
          name : renderpass-counting-results-${{ matrix.api-level }}
          path : ./**/build/reports/androidTests/connected/**

  build-instrumentation-tests :
    name : Build Instrumentation tests
    runs-on : macos-latest
    needs: build-all
    timeout-minutes : 45
    steps :
      - uses : actions/checkout@v3

      - name : Build instrumented tests
        uses : ./.github/actions/gradle-task
        with :
          task : assembleDebugAndroidTest
          restore-cache-key : main-build-artifacts
          write-cache-key : androidTest-build-artifacts

  instrumentation-tests :
    name : Instrumentation tests
    needs: build-instrumentation-tests
    runs-on : macos-latest
    timeout-minutes : 45
    strategy :
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast : false
      matrix :
        api-level :
          - 29
      # Unclear that older versions actually honor command to disable animation.
      # Newer versions are reputed to be too slow: https://github.com/ReactiveCircus/android-emulator-runner/issues/222
    steps :
      - uses : actions/checkout@v3

      # This really just pulls the cache from the dependency job
      - name : Build instrumented tests
        uses : ./.github/actions/gradle-task
        with :
          task : assembleDebugAndroidTest
          restore-cache-key : androidTest-build-artifacts

      ## Actual task
      - name : Instrumentation Tests
        uses : reactivecircus/android-emulator-runner@v2
        with :
          # @ychescale9 suspects Galaxy Nexus is the fastest one
          profile : Galaxy Nexus
          api-level : ${{ matrix.api-level }}
          arch : x86_64
          # Skip the benchmarks as this is running on emulators
          script : ./gradlew connectedCheck -x :benchmarks:dungeon-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-poetry:connectedCheck

      - name : Upload results
        if : ${{ always() }}
        uses : actions/upload-artifact@v3
        with :
          name : instrumentation-test-results-${{ matrix.api-level }}
          path : ./**/build/reports/androidTests/connected/**

  conflate-renderings-instrumentation-tests :
    name : Conflate Stale Renderings Instrumentation tests
    runs-on : macos-latest
    timeout-minutes : 45
    strategy :
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast : false
      matrix :
        api-level :
          - 29
      # Unclear that older versions actually honor command to disable animation.
      # Newer versions are reputed to be too slow: https://github.com/ReactiveCircus/android-emulator-runner/issues/222
    steps :
      - uses : actions/checkout@v3

      ## Build before running tests, using cache.
      - name : Build instrumented tests
        uses : ./.github/actions/gradle-task
        with :
          # Unfortunately I don't think we can key this cache based on our project property so
          # we clean and rebuild.
          task : clean assembleDebugAndroidTest -Pworkflow.runtime=conflate

      ## Actual task
      - name : Instrumentation Tests
        uses : reactivecircus/android-emulator-runner@v2
        with :
          # @ychescale9 suspects Galaxy Nexus is the fastest one
          profile : Galaxy Nexus
          api-level : ${{ matrix.api-level }}
          arch : x86_64
          # Skip the benchmarks as this is running on emulators
          script : ./gradlew connectedCheck -x :benchmarks:dungeon-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-poetry:connectedCheck -Pworkflow.runtime=conflate

      - name : Upload results
        if : ${{ always() }}
        uses : actions/upload-artifact@v3
        with :
          name : instrumentation-test-results-${{ matrix.api-level }}
          path : ./**/build/reports/androidTests/connected/**

  stateChange-runtime-instrumentation-tests :
    name : Render on State Change Only Instrumentation tests
    runs-on : macos-latest
    timeout-minutes : 45
    strategy :
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast : false
      matrix :
        api-level :
          - 29
      # Unclear that older versions actually honor command to disable animation.
      # Newer versions are reputed to be too slow: https://github.com/ReactiveCircus/android-emulator-runner/issues/222
    steps :
      - uses : actions/checkout@v3
      - name : set up JDK 11
        uses : actions/setup-java@v3
        with :
          distribution : 'zulu'
          java-version : 11

      ## Build before running tests, using cache.
      - name : Build instrumented tests
        uses : ./.github/actions/gradle-task
        with :
          # Unfortunately I don't think we can key this cache based on our project property so
          # we clean and rebuild.
          task : clean assembleDebugAndroidTest -Pworkflow.runtime=baseline-stateChange

      ## Actual task
      - name : Instrumentation Tests
        uses : reactivecircus/android-emulator-runner@v2
        with :
          # @ychescale9 suspects Galaxy Nexus is the fastest one
          profile : Galaxy Nexus
          api-level : ${{ matrix.api-level }}
          arch : x86_64
          # Skip the benchmarks as this is running on emulators
          script : ./gradlew connectedCheck -x :benchmarks:dungeon-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-poetry:connectedCheck -Pworkflow.runtime=baseline-stateChange

      - name : Upload results
        if : ${{ always() }}
        uses : actions/upload-artifact@v3
        with :
          name : stateChange-instrumentation-test-results-${{ matrix.api-level }}
          path : ./**/build/reports/androidTests/connected/**

  conflate-stateChange-runtime-instrumentation-tests :
    name : Render on State Change Only and Conflate Stale Renderings Instrumentation tests
    runs-on : macos-latest
    timeout-minutes : 45
    strategy :
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast : false
      matrix :
        api-level :
          - 29
      # Unclear that older versions actually honor command to disable animation.
      # Newer versions are reputed to be too slow: https://github.com/ReactiveCircus/android-emulator-runner/issues/222
    steps :
      - uses : actions/checkout@v3
      - name : set up JDK 11
        uses : actions/setup-java@v3
        with :
          distribution : 'zulu'
          java-version : 11

      ## Build before running tests, using cache.
      - name : Build instrumented tests
        uses : ./.github/actions/gradle-task
        with :
          # Unfortunately I don't think we can key this cache based on our project property so
          # we clean and rebuild.
          task : clean assembleDebugAndroidTest -Pworkflow.runtime=conflate-stateChange

      ## Actual task
      - name : Instrumentation Tests
        uses : reactivecircus/android-emulator-runner@v2
        with :
          # @ychescale9 suspects Galaxy Nexus is the fastest one
          profile : Galaxy Nexus
          api-level : ${{ matrix.api-level }}
          arch : x86_64
          # Skip the benchmarks as this is running on emulators
          script : ./gradlew connectedCheck -x :benchmarks:dungeon-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-benchmark:connectedCheck -x :benchmarks:performance-poetry:complex-poetry:connectedCheck -Pworkflow.runtime=conflate-stateChange

      - name : Upload results
        if : ${{ always() }}
        uses : actions/upload-artifact@v3
        with :
          name : conflate-stateChange-instrumentation-test-results-${{ matrix.api-level }}
          path : ./**/build/reports/androidTests/connected/**

  all-green :
    if : always()
    runs-on : ubuntu-latest
    needs :
      - android-lint
      - api-check
      - artifacts-check
      - check
      - conflate-renderings-instrumentation-tests
      - conflate-stateChange-runtime-instrumentation-tests
      - dependency-guard
      - dokka
      - instrumentation-tests
      - ios-tests
      - js-tests
      - jvm-conflate-runtime-test
      - jvm-conflate-stateChange-runtime-test
      - jvm-stateChange-runtime-test
      - ktlint
      - performance-tests
      - stateChange-runtime-instrumentation-tests
      - tutorials

    steps :
      - name : require that all other jobs have passed
        uses : re-actors/alls-green@release/v1
        with :
          jobs : ${{ toJSON(needs) }}
